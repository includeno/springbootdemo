# https://docs.github.com/en/actions/guides
# CI name , it will display on github's action page menu
name: Build SpringBootDemo
# trigger on which this CI should be run
on: # push operation is operate
  push:
    # here since my repository branch is named `main` , you should follow your own repository like `master`
    branches: [main]
# CI enviroment settings
env:
  STATE_RELEASE_VERSION: "1.0.0" # version
  TAG_NAME: "springbootdemo" #tag 只能小写开头
  java-version: "11"
jobs:
  build:
    name: DockerImage
    runs-on: ubuntu-latest # use latest ubuntu to run the job
    steps:
      - uses: actions/checkout@v2
      - uses: actions/checkout@v1
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: ${{ env.java-version }}
      #构建应用程序
      - name: Build with Maven
        run:
          mvn clean package -DskipTests=true -Dmaven.javadoc.skip=true -B -V
      #设置部分灵活的环境变量
      - name: Sets build date
        run: echo "BUILD_DATE=$(date '+%Y%m%d')" >> $GITHUB_ENV
      #安装docker模拟器 多平台镜像专用
      - name: Installing docker emulators
        run:
          docker run --privileged --rm tonistiigi/binfmt --install all
      #设置docker模拟器
      - name: docker buildx
        run:
          docker buildx create --use --name mybuilder
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      #版本号第一位不允许空格
      - name: Push to Docker Hub
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          tags: "${{ secrets.DOCKER_USERNAME }}/${{ env.TAG_NAME }}:latest,${{ secrets.DOCKER_USERNAME }}/${{ env.TAG_NAME }}:${{ env.STATE_RELEASE_VERSION }}"
          push: true
      - name: The job has succeeded
        if: ${{ success() }}
        run: echo "success"
      #https://github.com/8398a7/action-slack
      - name: Slack Nofitication
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took # selectable (default: repo,message)
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} # required
        if: always() # Pick up events even if the job fails or is canceled.
   